load_file("nrngui.hoc")

objref nil

objref pc
last_neuroid_time = 0

func neuroid_random() {
    pc = new ParallelContext()
    neuroid_time = pc.time
    neuroid_rseed = neuroid_time - last_neuroid_time
    last_neuroid_time = neuroid_time
    return (neuroid_rseed-neuroid_rseed%1)
}

// get latest N values from vector
proc get_latestN() {
    if($o1.size() >= $2) {
    $o3 = $o1.at($o1.size()-$2,$o1.size()-1)
    } else {
    $o3 = $o1.at(0,$o1.size()-1)
    }
} 

// All the numbers (except nIAf, nIIf and FromAll_IAf_ToOne_MN) are taken from Shuurmans 2007
// Tot number of cells
NetworkSize = 0.1

nMN = int(169*NetworkSize)
nIAf = int(60*NetworkSize) //Chin Cope & Pang 1962/Harrison 1981
nIIf = int(60*NetworkSize)
nIAint = int(196*NetworkSize)
nEXIN = int(196*NetworkSize)
weightStimMn = 20
weightStimAff = 10

// Tot number of synapses FromAll_CellA_ToOne_CellB

/*
FromAll_IAf_ToOne_MN = int(nIAf)
FromAll_IAf_ToOne_IAint = int(62*NetworkSize)

FromAll_IIf_ToOne_EXIN = int(62*NetworkSize)
FromAll_IIf_ToOne_IAint = int(62*NetworkSize)

FromAll_IAint_ToOne_IAint = int(100*NetworkSize)
FromAll_IAint_ToOne_MN = int(232*NetworkSize)

FromAll_EXIN_ToOne_MN = int(116*NetworkSize)

// MotoNeuron dendrite number
ndend = 12
*/
