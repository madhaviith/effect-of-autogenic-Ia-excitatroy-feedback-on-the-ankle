//Generated file
{xopen("tools.hoc")}
public soma
create soma[1]
public nsoma
public dendrite
create dendrite[1]
public ndendrite
public node
create node[1]
public nnode
public paranode
create paranode[1]
public nparanode
public nclist, synlist
objectvar nclist, synlist
public x, y, z
public position
public connect2target
public synapse


//init function
proc init() {localobj r,rmechanism,soma_start_list,soma_start,soma_end_list,soma_end,dendrite_start_list,dendrite_start,dendrite_end_list,dendrite_end,node_start_list,node_start,node_end_list,node_end,paranode_start_list,paranode_start,paranode_end_list,paranode_end
r=new Random(neuroid_random())
rmechanism=new Vector(2)
x = y = z = 0
nclist = new List()
synlist = new List()
nsoma=1
create soma[nsoma]
soma_start_list = new List()
soma_start = new Vector(4)
soma_start.x[0] = -42.5
soma_start.x[1] = 0
soma_start.x[2] = 0
soma_start.x[3] = 85.0
soma_start_list.append(soma_start)
soma_end_list = new List()
soma_end = new Vector(4)
soma_end.x[0] = 42.5
soma_end.x[1] = 0
soma_end.x[2] = 0
soma_end.x[3] = 85.0
soma_end_list.append(soma_end)
a=r.normal(0,5)
Gi=(2*3.14*((85+a)^2/1000) + ((73+a)*(7423+a)/8800))*1e-8
mechanism_range("soma","pas",rmechanism)
soma_pas_start = rmechanism.x[0]
soma_pas_end = rmechanism.x[1]
mechanism_range("soma","hhPC",rmechanism)
soma_hhPC_start = rmechanism.x[0]
soma_hhPC_end = rmechanism.x[1]
for i=0,nsoma-1 {
soma[i] {
  if ((i>=soma_pas_start*nsoma) && (i<soma_pas_end*nsoma)) {
    insert pas
    g_pas=1/1000.0
    e_pas=-70
  }
  if ((i>=soma_hhPC_start*nsoma) && (i<soma_hhPC_end*nsoma)) {
    insert hhPC
    Vtr_hhPC=12*((1/Gi)*1e-6)-70
    betaH_hhPC=4
    alphaM_hhPC=22
    Dur_hhPC=0.6
    gnabar_hhPC=0.2
    alphaH_hhPC=0.5
    alphaQ_hhPC=1.5
    betaN_hhPC=0.1
    Ref_hhPC=5
    betaQ_hhPC=0.055
    alphaN_hhPC=1.5
    betaM_hhPC=13
    gkbar_hhPC=0.03
  }
  ek=-90
  nseg=1
  L=85.0+a
  iRh=12
  Ra=70.0
  Gin=Gi
  Rms=1000
  diam=85.0+a
  Rin=(1/Gi)*1e-6
  pt3dclear() pt3dadd(soma_start_list.o(i).x[0],soma_start_list.o(i).x[1],soma_start_list.o(i).x[2],soma_start_list.o(i).x[3])  pt3dadd(soma_end_list.o(i).x[0],soma_end_list.o(i).x[1],soma_end_list.o(i).x[2],soma_end_list.o(i).x[3]) 
}
}
ndendrite=2
create dendrite[ndendrite]
dendrite_start_list = new List()
dendrite_start = new Vector(4)
dendrite_start.x[0] = -42.5
dendrite_start.x[1] = 0
dendrite_start.x[2] = 0
dendrite_start.x[3] = 73.0
dendrite_start_list.append(dendrite_start)
dendrite_start = new Vector(4)
dendrite_start.x[0] = -3753.5
dendrite_start.x[1] = 0
dendrite_start.x[2] = 0
dendrite_start.x[3] = 73.0
dendrite_start_list.append(dendrite_start)
dendrite_end_list = new List()
dendrite_end = new Vector(4)
dendrite_end.x[0] = -3753.5
dendrite_end.x[1] = 0
dendrite_end.x[2] = 0
dendrite_end.x[3] = 73.0
dendrite_end_list.append(dendrite_end)
dendrite_end = new Vector(4)
dendrite_end.x[0] = -7464.5
dendrite_end.x[1] = 0
dendrite_end.x[2] = 0
dendrite_end.x[3] = 73.0
dendrite_end_list.append(dendrite_end)
mechanism_range("dendrite","pas",rmechanism)
dendrite_pas_start = rmechanism.x[0]
dendrite_pas_end = rmechanism.x[1]
for i=0,ndendrite-1 {
dendrite[i] {
  if ((i>=dendrite_pas_start*ndendrite) && (i<dendrite_pas_end*ndendrite)) {
    insert pas
    e_pas=-70.0
    g_pas=1/8800
  }
  diam=73
  Rmd=8800
  nseg=50
  L=3711
  Ra=70.0
  pt3dclear() pt3dadd(dendrite_start_list.o(i).x[0],dendrite_start_list.o(i).x[1],dendrite_start_list.o(i).x[2],dendrite_start_list.o(i).x[3])  pt3dadd(dendrite_end_list.o(i).x[0],dendrite_end_list.o(i).x[1],dendrite_end_list.o(i).x[2],dendrite_end_list.o(i).x[3]) 
}
}
nnode=4
create node[nnode]
node_start_list = new List()
node_start = new Vector(4)
node_start.x[0] = 42.5
node_start.x[1] = 0
node_start.x[2] = 0
node_start.x[3] = 4.0
node_start_list.append(node_start)
node_start = new Vector(4)
node_start.x[0] = 545.64
node_start.x[1] = 0
node_start.x[2] = 0
node_start.x[3] = 4.0
node_start_list.append(node_start)
node_start = new Vector(4)
node_start.x[0] = 1048.78
node_start.x[1] = 0
node_start.x[2] = 0
node_start.x[3] = 4.0
node_start_list.append(node_start)
node_start = new Vector(4)
node_start.x[0] = 1551.92
node_start.x[1] = 0
node_start.x[2] = 0
node_start.x[3] = 4.0
node_start_list.append(node_start)
node_end_list = new List()
node_end = new Vector(4)
node_end.x[0] = 45.64
node_end.x[1] = 0
node_end.x[2] = 0
node_end.x[3] = 4.0
node_end_list.append(node_end)
node_end = new Vector(4)
node_end.x[0] = 548.78
node_end.x[1] = 0
node_end.x[2] = 0
node_end.x[3] = 4.0
node_end_list.append(node_end)
node_end = new Vector(4)
node_end.x[0] = 1051.92
node_end.x[1] = 0
node_end.x[2] = 0
node_end.x[3] = 4.0
node_end_list.append(node_end)
node_end = new Vector(4)
node_end.x[0] = 1555.06
node_end.x[1] = 0
node_end.x[2] = 0
node_end.x[3] = 4.0
node_end_list.append(node_end)
mechanism_range("node","hh",rmechanism)
node_hh_start = rmechanism.x[0]
node_hh_end = rmechanism.x[1]
for i=0,nnode-1 {
node[i] {
  if ((i>=node_hh_start*nnode) && (i<node_hh_end*nnode)) {
    insert hh
    gkbar_hh=0.09
    gl_hh=0.02
    el_hh=-0.05 - 70
    gnabar_hh=1.2
  }
  ena=115 - 70
  diam=4
  cm=3.14e-9*1/(PI*4)*1e4*1e6
  ek=-12 - 70
  nseg=1
  L=3.14
  Ra=1.26e8 * PI*4^2/4 * 1e-8
  pt3dclear() pt3dadd(node_start_list.o(i).x[0],node_start_list.o(i).x[1],node_start_list.o(i).x[2],node_start_list.o(i).x[3])  pt3dadd(node_end_list.o(i).x[0],node_end_list.o(i).x[1],node_end_list.o(i).x[2],node_end_list.o(i).x[3]) 
}
}
nparanode=4
create paranode[nparanode]
paranode_start_list = new List()
paranode_start = new Vector(4)
paranode_start.x[0] = 45.64
paranode_start.x[1] = 0
paranode_start.x[2] = 0
paranode_start.x[3] = 10.0
paranode_start_list.append(paranode_start)
paranode_start = new Vector(4)
paranode_start.x[0] = 548.78
paranode_start.x[1] = 0
paranode_start.x[2] = 0
paranode_start.x[3] = 10.0
paranode_start_list.append(paranode_start)
paranode_start = new Vector(4)
paranode_start.x[0] = 1051.92
paranode_start.x[1] = 0
paranode_start.x[2] = 0
paranode_start.x[3] = 10.0
paranode_start_list.append(paranode_start)
paranode_start = new Vector(4)
paranode_start.x[0] = 1555.06
paranode_start.x[1] = 0
paranode_start.x[2] = 0
paranode_start.x[3] = 10.0
paranode_start_list.append(paranode_start)
paranode_end_list = new List()
paranode_end = new Vector(4)
paranode_end.x[0] = 545.64
paranode_end.x[1] = 0
paranode_end.x[2] = 0
paranode_end.x[3] = 10.0
paranode_end_list.append(paranode_end)
paranode_end = new Vector(4)
paranode_end.x[0] = 1048.78
paranode_end.x[1] = 0
paranode_end.x[2] = 0
paranode_end.x[3] = 10.0
paranode_end_list.append(paranode_end)
paranode_end = new Vector(4)
paranode_end.x[0] = 1551.92
paranode_end.x[1] = 0
paranode_end.x[2] = 0
paranode_end.x[3] = 10.0
paranode_end_list.append(paranode_end)
paranode_end = new Vector(4)
paranode_end.x[0] = 2055.06
paranode_end.x[1] = 0
paranode_end.x[2] = 0
paranode_end.x[3] = 10.0
paranode_end_list.append(paranode_end)
mechanism_range("paranode","pas",rmechanism)
paranode_pas_start = rmechanism.x[0]
paranode_pas_end = rmechanism.x[1]
for i=0,nparanode-1 {
paranode[i] {
  if ((i>=paranode_pas_start*nparanode) && (i<paranode_pas_end*nparanode)) {
    insert pas
    g_pas=5.60e-9*1/(PI*10)*1e4
    e_pas=-70
  }
  diam=10
  Ra=1.26e8*PI*10^2/4 * 1e-8
  cm=1.87e-11*1/(PI*10)*1e4*1e6
  nseg=10
  L=500
}
}
connect soma[0](0.0), dendrite[0](1.0)
connect node[0](0.0), soma[0](1.0)
for i=0,ndendrite-2{
connect dendrite[i](0.0), dendrite[i+1](1.0)
}
for i=0,nnode-2{
connect paranode[i](0.0), node[i](1.0)
}
for i=0,nnode-2{
connect node[i+1](0.0), paranode[i](1.0)
}
}


//position function
proc position() {
    soma for i = 0, n3d()-1 {
        pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
    }
    dendrite for i = 0, n3d()-1 {
        pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
    }
    node for i = 0, n3d()-1 {
        pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
    }
    paranode for i = 0, n3d()-1 {
        pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
    }
    x = $1 y = $2 z = $3
}


//connect2target function
obfunc connect2target() {localobj nc
  node[nnode-1] nc = new NetCon(&v(1), $o1)
  nc.threshold = -20
  if (numarg() == 2) { $o2 = nc } // for backward compatibility
  return nc
}


//synapse function
obfunc synapse() {localobj syn
  nsoma = 1
  ndendrite = 2
  nnode = 4
  nparanode = 4
  if(strcmp($s1,"IAfex") == 0) {
    dendrite[int(poisson_index(4,0,ndendrite-1))] syn = new ExpSyn(uniform_position())
    syn.tau = 0.5
    syn.e = 0
  } else if(strcmp($s1,"EXINex") == 0) {
    dendrite[int(poisson_index(4.2,0,ndendrite-1))] syn = new ExpSyn(uniform_position())
    syn.tau = 0.5
    syn.e = 0
  } else if(strcmp($s1,"IAIntin") == 0) {
    soma[int(0)] syn = new Exp2Syn(0.5)
    syn.tau2 = 2
    syn.tau1 = 1.5
    syn.e = -75
  } else if(strcmp($s1,"EES") == 0) {
    node[int(3)] syn = new ExpSyn(0.5)
    syn.tau = 0.1
    syn.e = 50
  } else if(strcmp($s1,"GLU") == 0) {
    soma[int(0)] syn = new GLU(0.5)
  } else if(strcmp($s1,"GABA") == 0) {
    soma[int(0)] syn = new GABA(0.5)
  }
  synlist.append(syn)
  return syn
}


func poisson_index(){localobj r
  a=0
  r=new Random(neuroid_random())
  temp=r.poisson($1)
  for j=1,5{
    temp = r.repick()
    a+=temp
  }
  a = int(a/5)-2
  if (a<$2) {a=$2}
  if (a>$3) {a=$3}
  return a
}


func uniform_position() {localobj r
  r=new Random(neuroid_random())
  b=r.uniform(0,1)
  return b
}


proc mechanism_range() {localobj rvec,f
  rvec = $o3
  rvec.x[0] = 0.0
  rvec.x[1] = 1.0
  strdef segm,mech
  f = new File()
  f.ropen("M_cell_FR.dat")
  if (!f.isopen()){
    return
  }
  while (!f.eof()) {
    f.scanstr(segm)
    f.scanstr(mech)
    if ((strcmp(segm,$s1) == 0) && (strcmp(mech,$s2) == 0)){
        rvec.x[0] = f.scanvar()
        rvec.x[1] = f.scanvar()
    } else {
        f.gets(segm)
    }
  }
  f.close()
}


